# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  createdAt: DateTimeISO!
  description: String
  id: ID!
  name: String!
  posts: [Post!]
  slug: String!
  updatedAt: DateTimeISO!
}

input CategoryInput {
  description: String
  name: String!
  slug: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type LoginResponse {
  token: String!
  user: User!
}

type Mutation {
  createCategory(input: CategoryInput!): Category!
  createPost(input: PostInput!): Post!
  deleteCategory(id: String!): Boolean!
  deletePost(id: String!): Boolean!
  login(email: String!, password: String!): LoginResponse!
  register(input: UserInput!): User!
  updateCategory(id: String!, input: CategoryInput!): Category!
  updatePost(id: String!, input: PostUpdateInput!): Post!
}

type Post {
  author: User!
  authorId: String!
  category: Category!
  categoryId: String!
  content: String!
  createdAt: DateTimeISO!
  excerpt: String!
  featuredImageUrl: String
  id: ID!
  publishedAt: DateTimeISO
  relatedPosts: [Post!]
  slug: String!
  status: String!
  title: String!
  updatedAt: DateTimeISO!
}

input PostInput {
  authorId: String
  categoryId: String
  content: String!
  excerpt: String!
  featuredImageUrl: String
  relatedPostIds: [String!]
  slug: String
  status: String = "draft"
  title: String!
}

input PostUpdateInput {
  categoryId: String
  content: String
  excerpt: String
  featuredImageUrl: String
  publishedAt: DateTimeISO
  relatedPostIds: [String!]
  slug: String
  status: String
  title: String
}

type Query {
  categories: [Category!]!
  category(id: String!): Category
  countPublishedPosts: Int!
  post(id: String!): Post
  postBySlug(slug: String!): Post
  posts: [Post!]!
  postsByCategory(categoryId: String!, limit: Int, offset: Int): [Post!]!
  publishedPosts(limit: Int, offset: Int): [Post!]!
  searchPosts(limit: Int, offset: Int, term: String!): [Post!]!
  user(id: String!): User
  users: [User!]!
}

type User {
  bio: String
  createdAt: DateTimeISO!
  email: String!
  id: ID!
  name: String!
  position: String
  posts: [Post!]
  profileImageUrl: String
  role: String!
  updatedAt: DateTimeISO!
}

input UserInput {
  email: String!
  name: String!
  password: String!
  role: String
}